{"version":3,"file":"static/js/764.73d0ad7a.chunk.js","mappings":"wNAyEA,UAtEe,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,WACnC,IAAMG,EAAcC,aAAaC,QAAQ,UACzC,OAAOF,EAAcG,KAAKC,MAAMJ,GAAe,EAChD,IAHD,eAAOK,EAAP,KAAeC,EAAf,KAIMC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAA4B,WAChCT,aAAaU,OACd,EAMD,OAHAC,OAAOC,iBAAiB,eAAgBH,GAGjC,WACLE,OAAOE,oBAAoB,eAAgBJ,EAC5C,CACF,GAAE,IAEH,IAIMK,EAAkB,mCAAG,WAAOC,GAAP,wEACzBA,EAAMC,iBACNV,EAAS,iBAAD,OAAkBT,IAFD,SAGnBoB,EAAYpB,GAHO,2CAAH,sDAMlBoB,EAAW,mCAAG,WAAOC,GAAP,kGAEOC,MAAM,qDAAD,OA5BjB,mCA4BiB,kBAAsED,IAFlF,cAEVE,EAFU,gBAGGA,EAASC,OAHZ,QAGVC,EAHU,QAIPC,UACPlB,EAAUiB,EAAKC,SACfvB,aAAawB,QAAQ,SAAUtB,KAAKuB,UAAUH,EAAKC,WANrC,kDAShBG,QAAQC,MAAM,yBAAd,MATgB,0DAAH,sDAajB,OACE,4BACE,oCACC,kBAAMC,SAAUd,EAAhB,WACC,kBACEe,KAAK,OACLC,YAAY,wBACZC,MAAOlC,EACPmC,SA/BmB,SAACjB,GAC1BjB,EAAeiB,EAAMkB,OAAOF,MAC7B,KA+BK,mBAAQF,KAAK,SAAb,wBAGF,wBACGzB,EAAO8B,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADL,QAQnB,C,sBCvED,SAASE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBf,EAAQgB,EAAKhB,KAInB,CAHE,MAAOJ,GAEP,YADAe,EAAOf,EAET,CAEIoB,EAAKC,KACPP,EAAQV,GAERkB,QAAQR,QAAQV,GAAOmB,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMZ,GACbQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQb,EAClE,CAEA,SAASa,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["pages/Movies.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(() => {\n    const savedMovies = localStorage.getItem('movies');\n    return savedMovies ? JSON.parse(savedMovies) : [];\n  });\n  const navigate = useNavigate();\n  const apiKey = '37e7d95cf2428fca838e6974f910059b'; \n\n  useEffect(() => {\n    const clearLocalStorageOnUnload = () => {\n      localStorage.clear();\n    };\n\n    // Attach the event listener to clean up localStorage when leaving the component.\n    window.addEventListener('beforeunload', clearLocalStorageOnUnload);\n\n    // Cleanup the event listener when the component is unmounted.\n    return () => {\n      window.removeEventListener('beforeunload', clearLocalStorageOnUnload);\n    };\n  }, []); // Empty dependency array to only run this effect once on component mount\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchSubmit = async (event) => {\n    event.preventDefault();\n    navigate(`/movies?query=${searchQuery}`);\n    await fetchMovies(searchQuery);\n  };\n\n  const fetchMovies = async (query) => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`);\n      const data = await response.json();\n      if (data.results) {\n        setMovies(data.results);\n        localStorage.setItem('movies', JSON.stringify(data.results));\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Movies</h2>\n       <form onSubmit={handleSearchSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for a movie...\"\n          value={searchQuery}\n          onChange={handleSearchChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {movies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","searchQuery","setSearchQuery","savedMovies","localStorage","getItem","JSON","parse","movies","setMovies","navigate","useNavigate","useEffect","clearLocalStorageOnUnload","clear","window","addEventListener","removeEventListener","handleSearchSubmit","event","preventDefault","fetchMovies","query","fetch","response","json","data","results","setItem","stringify","console","error","onSubmit","type","placeholder","value","onChange","target","map","movie","to","id","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}