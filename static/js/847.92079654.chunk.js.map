{"version":3,"file":"static/js/847.92079654.chunk.js","mappings":"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","sources":["pages/MovieDetails.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../index.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [isCastVisible, setIsCastVisible] = useState(false);\n  const [areReviewsVisible, setAreReviewsVisible] = useState(false);\n  const [movieImage, setMovieImage] = useState(null); \n  useEffect(() => {\n    const apiKey = '37e7d95cf2428fca838e6974f910059b'; \n    const movieDetailsUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`;\n    const castUrl = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`;\n    const reviewsUrl = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`;\n\n    const fetchMovieDetails = async () => {\n      try {\n        const [detailsResponse, castResponse, reviewsResponse] = await Promise.all([\n          fetch(movieDetailsUrl),\n          fetch(castUrl),\n          fetch(reviewsUrl),\n        ]);\n\n        const detailsData = await detailsResponse.json();\n        const castData = await castResponse.json();\n        const reviewsData = await reviewsResponse.json();\n\n        setMovieDetails(detailsData);\n        setCast(castData.cast);\n        setReviews(reviewsData.results);\n\n        // Отримуємо URL зображення фільму\n        if (detailsData.poster_path) {\n          const imageUrl = `https://image.tmdb.org/t/p/w500${detailsData.poster_path}`;\n          setMovieImage(imageUrl);\n        }\n      } catch (error) {\n        console.error('Error loading movie data:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <button onClick={() => window.history.back()}>Back</button>\n      {movieDetails && (\n        <div>\n          <div className='additional-info div-add'>\n            {movieImage && <img src={movieImage} alt={movieDetails.title} className='img-info'/>}\n            <div className='info-about-film'>\n          <h2>{movieDetails.title}</h2>\n          <p>User score: {movieDetails.vote_average}</p>\n          <h3>Overview:</h3><p>{movieDetails.overview}</p>\n          <h3>Genres:</h3><p> {movieDetails.genres.map((genre) => genre.name).join(', ')}</p>\n            </div>\n          </div>\n<div className='additional-info'>\n          <h3>Additional Information:</h3>\n          <ul className='additional-info-ul'>\n            <li className='additional-info-li-cast'>\n              <button onClick={() => setIsCastVisible(!isCastVisible)}>\n                Cast\n              </button>\n              {isCastVisible && (\n                <ul className=\"show\">\n                    {cast.map((actor) => (\n                      <li key={actor.id} className=\"cast-item\">\n                        <div className=\"cast-item-info\">\n                          <div className=\"cast-item-image\">\n                            {actor.profile_path && (\n                              <img\n                                src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n                                alt={`${actor.name}'s profile`}\n                              />\n                            )}\n                          </div>\n                          <div className=\"cast-item-details\">\n                            <p>{actor.name}</p>\n                            <p>Character: {actor.character}</p>\n                          </div>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n              )}\n            </li>\n            <li>\n              <button onClick={() => setAreReviewsVisible(!areReviewsVisible)}>\n                Reviews\n              </button>\n              {areReviewsVisible && (\n                <ul>\n                  {reviews.length > 0 ? (\n                    reviews.map((review) => (\n                      <li key={review.id}>\n                        <p>{review.author}</p>\n                        <p>{review.content}</p>\n                      </li>\n                    ))\n                  ) : (\n                    <p>No reviews available.</p>\n                  )}\n                </ul>\n              )}\n            </li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","cast","setCast","reviews","setReviews","isCastVisible","setIsCastVisible","areReviewsVisible","setAreReviewsVisible","movieImage","setMovieImage","useEffect","apiKey","movieDetailsUrl","castUrl","reviewsUrl","fetchMovieDetails","Promise","all","fetch","detailsResponse","castResponse","reviewsResponse","json","detailsData","castData","reviewsData","results","poster_path","imageUrl","console","error","onClick","window","history","back","className","src","alt","title","vote_average","overview","genres","map","genre","name","join","actor","profile_path","character","id","length","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}